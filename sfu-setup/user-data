#cloud-config
# This file is used as a user-data script to start a VM
# It'll upload configs to the right location and install LiveKit as a systemd service
# LiveKit will be started automatically at machine startup
package_update: true
package_upgrade: all

packages:
  - docker.io

bootcmd:
  - mkdir -p /opt/livekit/caddy_data
  - mkdir -p /usr/local/bin

write_files:
  - path: /opt/livekit/livekit.yaml
    content: |
      port: 7880
      bind_addresses:
          - ""
      rtc:
          tcp_port: 7881
          port_range_start: 50000
          port_range_end: 60000
          use_external_ip: true
          enable_loopback_candidate: false
      redis:
          address: driving-ibex-14211.upstash.io:6379
          username: "default"
          password: "ATeDAAIjcDE2OTBlMGQ4YjE2NDQ0MmI3YmMyMWFlMTI0YWI1NTEzMXAxMA"
          db: 0
          use_tls: true
          sentinel_master_name: ""
          sentinel_username: ""
          sentinel_password: ""
          sentinel_addresses: []
          cluster_addresses: []
          max_redirects: null
      turn:
          enabled: true
          domain: livekit-turn.yashk.dev
          tls_port: 5349
          udp_port: 3478
          external_tls: true
      ingress:
          rtmp_base_url: rtmp://livekit.yashk.dev:1935/x
          whip_base_url: https://livekit-whip.yashk.dev/w
      keys:
          APIdhTekVViwnfg: K3efJ9befj0FMqe2r7OnWnYuWwTEo85gfI18q50X3GxF


  - path: /opt/livekit/caddy.yaml
    content: |
      logging:
        logs:
          default:
            level: INFO
      storage:
        "module": "file_system"
        "root": "/data"
      apps:
        tls:
          certificates:
            automate:
              - livekit.yashk.dev
              - livekit-turn.yashk.dev
              - livekit-whip.yashk.dev
        layer4:
          servers:
            main:
              listen: [":443"]
              routes:
                - match:
                  - tls:
                      sni:
                        - "livekit-turn.yashk.dev"
                  handle:
                    - handler: tls
                    - handler: proxy
                      upstreams:
                        - dial: ["localhost:5349"]
                - match:
                    - tls:
                        sni:
                          - "livekit.yashk.dev"
                  handle:
                    - handler: tls
                      connection_policies:
                        - alpn: ["http/1.1"]
                    - handler: proxy
                      upstreams:
                        - dial: ["localhost:7880"]
                - match:
                    - tls:
                        sni:
                          - "livekit-whip.yashk.dev"
                  handle:
                    - handler: tls
                      connection_policies:
                        - alpn: ["http/1.1"]
                    - handler: proxy
                      upstreams:
                        - dial: ["localhost:8080"]


  - path: /opt/livekit/update_ip.sh
    content: |
      #!/usr/bin/env bash
      ip=`ip addr show |grep "inet " |grep -v 127.0.0. |head -1|cut -d" " -f6|cut -d/ -f1`
      sed -i.orig -r "s/\\\"(.+)(\:5349)/\\\"$ip\2/" /opt/livekit/caddy.yaml


  - path: /opt/livekit/docker-compose.yaml
    content: |
      # This docker-compose requires host networking, which is only available on Linux
      # This compose will not function correctly on Mac or Windows
      services:
        caddy:
          image: livekit/caddyl4
          command: run --config /etc/caddy.yaml --adapter yaml
          restart: unless-stopped
          network_mode: "host"
          volumes:
            - ./caddy.yaml:/etc/caddy.yaml
            - ./caddy_data:/data
        livekit:
          image: livekit/livekit-server:latest
          command: --config /etc/livekit.yaml
          restart: unless-stopped
          network_mode: "host"
          volumes:
            - ./livekit.yaml:/etc/livekit.yaml
        egress:
          image: livekit/egress:latest
          restart: unless-stopped
          environment:
            - EGRESS_CONFIG_FILE=/etc/egress.yaml
          network_mode: "host"
          volumes:
            - ./egress.yaml:/etc/egress.yaml
          cap_add:
            - CAP_SYS_ADMIN
        ingress:
          image: livekit/ingress:latest
          restart: unless-stopped
          environment:
            - INGRESS_CONFIG_FILE=/etc/ingress.yaml
          network_mode: "host"
          volumes:
            - ./ingress.yaml:/etc/ingress.yaml


  - path: /etc/systemd/system/livekit-docker.service
    content: |
      [Unit]
      Description=LiveKit Server Container
      After=docker.service
      Requires=docker.service

      [Service]
      LimitNOFILE=500000
      Restart=always
      WorkingDirectory=/opt/livekit
      # Shutdown container (if running) when unit is started
      ExecStartPre=/usr/local/bin/docker-compose -f docker-compose.yaml down
      ExecStart=/usr/local/bin/docker-compose -f docker-compose.yaml up
      ExecStop=/usr/local/bin/docker-compose -f docker-compose.yaml down

      [Install]
      WantedBy=multi-user.target


  - path: /opt/livekit/egress.yaml
    content: |
      redis:
          address: driving-ibex-14211.upstash.io:6379
          username: "default"
          password: "ATeDAAIjcDE2OTBlMGQ4YjE2NDQ0MmI3YmMyMWFlMTI0YWI1NTEzMXAxMA"
          db: 0
          use_tls: true
          sentinel_master_name: ""
          sentinel_username: ""
          sentinel_password: ""
          sentinel_addresses: []
          cluster_addresses: []
          max_redirects: null
      api_key: APIdhTekVViwnfg
      api_secret: K3efJ9befj0FMqe2r7OnWnYuWwTEo85gfI18q50X3GxF
      ws_url: wss://livekit.yashk.dev


  - path: /opt/livekit/ingress.yaml
    content: |
      redis:
          address: driving-ibex-14211.upstash.io:6379
          username: "default"
          password: "ATeDAAIjcDE2OTBlMGQ4YjE2NDQ0MmI3YmMyMWFlMTI0YWI1NTEzMXAxMA"
          db: 0
          use_tls: true
          sentinel_master_name: ""
          sentinel_username: ""
          sentinel_password: ""
          sentinel_addresses: []
          cluster_addresses: []
          max_redirects: null
      api_key: APIdhTekVViwnfg
      api_secret: K3efJ9befj0FMqe2r7OnWnYuWwTEo85gfI18q50X3GxF
      ws_url: wss://livekit.yashk.dev
      rtmp_port: 1935
      whip_port: 8080
      http_relay_port: 9090
      logging:
          json: false
          level: ""
      development: false
      rtc_config:
          udp_port: 7885
          use_external_ip: true
          enable_loopback_candidate: false



runcmd:
  - curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod 755 /usr/local/bin/docker-compose
  - chmod 755 /opt/livekit/update_ip.sh
  - /opt/livekit/update_ip.sh
  - systemctl enable livekit-docker
  - systemctl start livekit-docker